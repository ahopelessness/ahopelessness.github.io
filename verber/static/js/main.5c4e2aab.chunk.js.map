{"version":3,"sources":["components/Header.js","components/Footer.js","components/Incoming.js","store/game/actions.js","utils/array.js","utils/game.js","components/Task.js","components/Game.js","components/Settings.js","store/game/reducer.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Navbar","bg","className","expand","Brand","react_router_dom","to","tabIndex","NavDropdown","title","index_esm","id","alignRight","Item","as","Footer","props","connect","state","incoming","game","_ref","map","verb","key","base","CHANGE_TASK","REPLAY_GAME","shuffle","array","counter","length","index","Math","floor","random","temp","VOWELS_MAPPING","e","i","o","u","createVerb","simple","firstVerb","changeVowels","secondVerb","some","variant","match","createEd","word","letters","split","result","changed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","letter","value","err","return","makeState","verbDef","Object","objectSpread","participle","def","createTask","answerSimple","answerParticiple","window","mapDispatchToProps","changeTask","task","type","payload","replayGame","current","finished","status","currentFailedCount","_useState","useState","_useState2","slicedToArray","taskState","setTaskState","useEffect","setAnswer","defineProperty","checkVariant","answerKey","stateKey","toLowerCase","idx","Button","onClick","onKeyPress","Game","components_Task","Settings","verbs","require","data","fails","localStorage","getItem","JSON","parse","initialState","slice","rootReducer","combineReducers","arguments","action","isRight","concat","toConsumableArray","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","addEventListener","getState","setItem","stringify","App","es","basename","Container","react_router","path","exact","component","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c4e2aab.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Navbar, NavDropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { MdMenu } from 'react-icons/md';\n\nexport default function Header() {\n  return (\n    <Navbar bg=\"dark\" className=\"justify-content-between pb-0 pr-0\" expand=\"lg\">\n      <Navbar.Brand>\n        <Link to=\"/\" tabIndex=\"-1\">\n          verber\n        </Link>\n      </Navbar.Brand>\n\n      <NavDropdown title={<MdMenu />} id=\"m22-nav-dropdown\" alignRight className=\"m22-dropdown\">\n        <NavDropdown.Item as=\"div\">\n          <Link to=\"/settings\" tabIndex=\"-1\">\n            Settings\n          </Link>\n        </NavDropdown.Item>\n        <NavDropdown.Item as=\"div\">\n          <Link to=\"/history\" tabIndex=\"-1\">\n            History\n          </Link>\n        </NavDropdown.Item>\n        {/* <NavDropdown.Divider /> */}\n      </NavDropdown>\n    </Navbar>\n  );\n}\n","import React from 'react'\n\n\nexport default function Footer(props) {\n  return <footer></footer>\n\n}","import React from 'react'\n\nimport {connect} from 'react-redux'\n\nfunction Incoming({ incoming }) {\n  return <div className=\"m22-incoming\">\n    <ul>\n    {\n        incoming.map(verb =>\n          <li key={verb.base}>{verb.base}</li>\n        )\n      }\n      </ul>\n  </div>\n\n }\n\n\nconst mapStateToProps = (state) => {\n  return {\n    incoming: state.game.incoming\n  }\n}\n\nexport default connect(mapStateToProps)(Incoming)","\n\nexport const CHANGE_TASK = 'CHANGE_TASK'\nexport const REPLAY_GAME = 'REPLAY_GAME'\n\n\n\nexport function changeTask(task) {\n\n  return {\n    type: CHANGE_TASK,\n    payload: task\n  }\n}\n\nexport function replayGame() {\n  return {\n    type: REPLAY_GAME\n  }\n}\n\n","\n\nexport function shuffle(array) {\n  let counter = array.length;\n\n  // While there are elements in the array\n  while (counter > 0) {\n      // Pick a random index\n      let index = Math.floor(Math.random() * counter);\n\n      // Decrease counter by 1\n      counter--;\n\n      // And swap the last element with it\n      let temp = array[counter];\n      array[counter] = array[index];\n      array[index] = temp;\n  }\n\n  return array;\n}","import { shuffle } from './array';\n\nconst VOWELS_MAPPING = {\n  a: ['o', 'u'],\n  e: ['o', 'u'],\n  i: ['ea'],\n  o: ['a', 'e'],\n  u: ['o', 'a']\n};\n\nexport function createTask(verbDef) {\n  const simple = createVerb(verbDef.base, verbDef.simple);\n  const participle = createVerb(verbDef.base, verbDef.participle, simple);\n\n  return {\n    base: verbDef.base,\n    simple,\n    participle,\n    def: verbDef\n  };\n}\n\nfunction createVerb(base, verb, simple) {\n  let firstVerb = changeVowels(verb);\n  let secondVerb = simple\n    ? simple.some(variant => !!variant.match(/ed$/))\n      ? createEd(base)\n      : changeVowels(verb)\n    : changeVowels(verb);\n\n  if (firstVerb.match(/[aieou].*/) !== null) {\n    while (firstVerb === verb) {\n      firstVerb = changeVowels(firstVerb);\n    }\n  }\n  if (secondVerb.match(/[aieou].*/) !== null) {\n    while (secondVerb === firstVerb || secondVerb === verb) {\n      secondVerb = changeVowels(secondVerb);\n    }\n  }\n\n  return shuffle([verb, firstVerb, secondVerb]);\n}\n\nfunction createEd(verb) {\n  return verb + 'ed';\n}\n\nfunction flipCoin() {\n  return Math.random() > 0.5;\n}\n\nfunction changeVowels(word) {\n  const letters = word.split('');\n  let result = '';\n\n  let changed = false;\n\n  for (let letter of letters) {\n    if (!!VOWELS_MAPPING[letter]) {\n      if (!changed || flipCoin()) {\n        result += shuffle(VOWELS_MAPPING[letter])[0];\n        changed = true;\n      } else {\n        result += letter;\n      }\n    } else {\n      result += letter;\n    }\n  }\n\n  return result;\n}\n\nwindow.changeVowels = changeVowels;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport * as actions from '../store/game/actions';\nimport { createTask } from '../utils/game';\nimport { MdPlayCircleOutline, MdErrorOutline, MdReplay } from 'react-icons/md';\n\nfunction checkComplete(state) {\n  return state['answerSimple'] !== null && state['answerParticiple'] !== null;\n}\n\nfunction makeState(verbDef) {\n  return {\n    ...createTask(verbDef),\n    answerSimple: null,\n    answerParticiple: null\n  };\n}\n\nfunction Task({ current, finished, incoming, currentFailedCount, changeTask, replayGame }) {\n  const [taskState, setTaskState] = useState(makeState(current));\n\n  useEffect(() => {\n    setTaskState(makeState(current));\n  }, [current]);\n\n  const setAnswer = (variant, key) => {\n    if (taskState['answer' + key]) return;\n    setTaskState({\n      ...taskState,\n      ['answer' + key]: variant\n    });\n  };\n\n  function checkVariant(variant, key) {\n    const answerKey = 'answer' + key;\n    const stateKey = key.toLowerCase();\n\n    return taskState[answerKey] === variant\n      ? taskState.def[stateKey] === taskState[answerKey]\n        ? 'm22-correct'\n        : 'm22-fail'\n      : taskState[answerKey] !== null && taskState.def[stateKey] === variant\n      ? 'm22-correct'\n      : '';\n  }\n\n  let tabIndex = 1;\n  if (incoming.length) {\n    return (\n      <div className=\"m22-task d-flex flex-column flex-fill align-items-center\">\n        <div className=\"m22-base w-100\">{taskState.base}</div>\n        <div className=\"m22-tast-progress d-flex px-5 w-100 justify-content-between align-items-center\">\n          <div className=\"m22-fail-count d-flex\">\n            <div>\n              <MdErrorOutline className=\"m22-icon\" />\n            </div>{' '}\n            <div className=\"fail-text\">{currentFailedCount}</div>\n          </div>\n          <div>{finished.length + '/' + (incoming.length + finished.length)}</div>\n        </div>\n\n        <div className=\"m22-simple m22-answer-block p-3 px-5 d-flex flex-column w-100\">\n          <h6 className=\"text-right font-italic\">simple</h6>\n          {taskState.simple.map((verb, idx) => (\n            <Button\n              variant=\"secondary\"\n              onClick={e => setAnswer(verb, 'Simple')}\n              className={checkVariant(verb, 'Simple') + ' mb-3 mb-sm-4'}\n              key={verb + idx}\n              tabIndex={tabIndex++}\n            >\n              {verb}\n            </Button>\n          ))}\n        </div>\n        <div className=\"m22-participle m22-answer-block mx-4 px-5  d-flex flex-column w-100\">\n          <h6 className=\"text-right font-italic\">participle</h6>\n          {taskState.participle.map((verb, idx) => (\n            <Button\n              variant=\"secondary\"\n              onClick={e => setAnswer(verb, 'Participle')}\n              className={checkVariant(verb, 'Participle') + ' mb-3 mb-sm-4'}\n              key={verb + idx}\n              tabIndex={tabIndex++}\n            >\n              {verb}\n            </Button>\n          ))}\n          <div className=\"d-flex justify-content-end\">\n            <MdPlayCircleOutline\n              onClick={e => {\n                changeTask(taskState);\n              }}\n              onKeyPress={e => {\n                if (e.key === 'Enter') {\n                  changeTask(taskState);\n                }\n              }}\n              className={(checkComplete(taskState) ? 'active' : 'disabled') + ' m22-icon'}\n              tabIndex={tabIndex++}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"m22-game-replay d-flex flex-fill justify-content-center align-items-center\">\n        <MdReplay\n          onClick={e => {\n            replayGame();\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    current: state.game.current,\n    finished: state.game.finished,\n    incoming: state.game.incoming,\n    status: state.game.status,\n    currentFailedCount: state.game.currentFailedCount\n  };\n};\n\nconst mapDispatchToProps = {\n  changeTask: actions.changeTask,\n  replayGame: actions.replayGame\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Task);\n","import React from 'react'\n\nimport Incoming from './Incoming'\nimport Task from './Task'\n\nexport default function Game(props) {\n  return <main className=\"d-flex flex-column flex-fill \">\n    <Task />\n    {/* <Incoming /> */}\n  </main>\n}\n","import React from 'react'\n\n\nimport { Button } from 'react-bootstrap';\n\nexport default function Settings(props) {\n  return <main className=\"m22-settings\">\n    {/* settings\n\n     <div>\n      <Button>test</Button>\n     </div> */}\n  </main>\n}\n","import { CHANGE_TASK, REPLAY_GAME } from './actions';\nimport { shuffle } from '../../utils/array';\n\nconst raw = require('../../data/verbs.json');\nconst verbs = shuffle(raw.data);\n\nconst fails = !!localStorage.getItem('VERBER_FAILED_TASKS') ?\n  JSON.parse(localStorage.getItem('VERBER_FAILED_TASKS'))\n: []\n\nconst initialState = {\n  current: verbs[0],\n  finished: [],\n  fails: fails,\n  currentFailedCount: 0,\n  incoming: verbs.slice(1, verbs.length),\n  status: 'bla'\n};\n\nexport default function gameReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_TASK:\n      const task = action.payload;\n      const isRight =\n        task.answerSimple === task.def.simple && task.answerParticiple === task.def.participle;\n\n      return {\n        finished: [state.current, ...state.finished],\n        current: state.incoming.length > 0 ? state.incoming[0] : null,\n        incoming: state.incoming.slice(1, state.incoming.length),\n        status: state.incoming.length === 0 ? 'You win' : null,\n        fails: isRight ? state.fails : [...state.fails, task.def],\n        currentFailedCount: isRight ? state.currentFailedCount : state.currentFailedCount + 1\n      };\n    case REPLAY_GAME:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers } from 'redux';\nimport gameReducer from './game/reducer';\n\nconst rootReducer = combineReducers({\n  game: gameReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nwindow.addEventListener('beforeunload', e => {\n  const state = store.getState();\n\n  if (state.game.fails.length)\n    localStorage.setItem('VERBER_FAILED_TASKS', JSON.stringify(state.game.fails));\n});\n\nexport default store;\n","import React from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Game from './components/Game';\nimport Settings from './components/Settings';\n\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport { Container } from 'react-bootstrap';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router basename={'/verber'}>\n        <Container className=\"flex-fill d-flex flex-column p-0\">\n          <Header />\n          <Route path=\"/\" exact component={Game} />\n          <Route path=\"/settings\" exact component={Settings} />\n          <Footer />\n        </Container>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}