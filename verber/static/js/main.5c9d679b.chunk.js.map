{"version":3,"sources":["components/Header.js","components/Footer.js","components/Incoming.js","store/game/actions.js","utils/array.js","utils/game.js","components/Task.js","components/Game.js","components/Settings.js","store/game/reducer.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","Navbar","bg","className","expand","Brand","react_router_dom","to","index_esm","Footer","connect","state","incoming","game","_ref","map","verb","key","base","CHANGE_PUZZLE","shuffle","array","counter","length","index","Math","floor","random","temp","VOWELS_MAPPING","e","i","o","u","createTask","verbDef","simple","changeVowels","flipCoin","createEd","createSimple","participle","_ref2","some","variant","match","createParticiple","def","word","letters","split","result","changed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","letter","value","err","return","makeState","Object","objectSpread","answerSimple","answerParticiple","window","mapDispatchToProps","changePuzzle","type","current","status","_useState","useState","_useState2","slicedToArray","taskState","setTaskState","useEffect","setAnswer","defineProperty","checkVariant","answerKey","stateKey","toLowerCase","idx","Button","onClick","preventDefault","Game","components_Task","Settings","verbs","require","data","initialState","finished","slice","rootReducer","combineReducers","arguments","concat","toConsumableArray","createStore","__REDUX_DEVTOOLS_EXTENSION__","App","es","store","Container","react_router","path","exact","component","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c9d679b.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Nav, Navbar, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { MdMenu } from 'react-icons/md';\n\nexport default function Header(props) {\n  return (\n    <Navbar bg=\"dark\" className=\"justify-content-between\" expand=\"lg\">\n      <Navbar.Brand>\n        <Link to=\"/\">verber</Link>\n      </Navbar.Brand>\n\n\n       <Link to=\"/settings\">\n          <MdMenu />\n        </Link>\n    </Navbar>\n  );\n}","import React from 'react'\n\n\nexport default function Footer(props) {\n  return <footer></footer>\n\n}","import React from 'react'\n\nimport {connect} from 'react-redux'\n\nfunction Incoming({ incoming }) {\n  return <div className=\"m22-incoming\">\n    <ul>\n    {\n        incoming.map(verb =>\n          <li key={verb.base}>{verb.base}</li>\n        )\n      }\n      </ul>\n  </div>\n\n }\n\n\nconst mapStateToProps = (state) => {\n  return {\n    incoming: state.game.incoming\n  }\n}\n\nexport default connect(mapStateToProps)(Incoming)","\n\nexport const CHANGE_PUZZLE = 'CHANGE_PUZZLE'\n\n\n\nexport function changePuzzle() {\n  return {\n    type: CHANGE_PUZZLE\n  }\n}\n\n","\n\nexport function shuffle(array) {\n  let counter = array.length;\n\n  // While there are elements in the array\n  while (counter > 0) {\n      // Pick a random index\n      let index = Math.floor(Math.random() * counter);\n\n      // Decrease counter by 1\n      counter--;\n\n      // And swap the last element with it\n      let temp = array[counter];\n      array[counter] = array[index];\n      array[index] = temp;\n  }\n\n  return array;\n}","import { shuffle } from './array';\n\nconst VOWELS_MAPPING = {\n  a: ['o', 'u'],\n  e: ['o', 'u'],\n  i: ['ea'],\n  o: ['a', 'e'],\n  u: ['o', 'a']\n};\n\nexport function createTask(verbDef) {\n  const simple = createSimple(verbDef);\n  const participle = createParticiple(verbDef, simple)\n\n  return {\n    base: verbDef.base,\n    simple,\n    participle,\n    def: verbDef\n  };\n}\n\nfunction createSimple({ base, simple }) {\n  const result = [simple, changeVowels(simple), flipCoin() ? createEd(base) : changeVowels(simple)];\n\n  return shuffle(result);\n}\n\nfunction createParticiple({ base, participle }, simple) {\n  const result = [\n    participle,\n    changeVowels(participle),\n    simple.some(variant => !!variant.match(/ed$/)) ? createEd(base) : changeVowels(participle)\n  ];\n\n  return shuffle(result);\n}\n\nfunction createEd(verb) {\n  return verb + 'ed';\n}\n\nfunction flipCoin() {\n  return Math.random() > 0.5;\n}\n\nfunction changeVowels(word) {\n  const letters = word.split('');\n  let result = '';\n\n  let changed = false;\n\n  for (let letter of letters) {\n    if (!!VOWELS_MAPPING[letter]) {\n      if (!changed || flipCoin()) {\n        result += shuffle(VOWELS_MAPPING[letter])[0];\n        changed = true;\n      } else {\n        result += letter;\n      }\n    } else {\n      result += letter;\n    }\n  }\n\n  return result;\n}\n\nwindow.changeVowels = changeVowels;\n","import React, { useState, useEffect  } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport * as actions from '../store/game/actions';\nimport { createTask } from '../utils/game';\nimport { MdPlayCircleOutline } from 'react-icons/md';\n\n\nfunction checkComplete(state) {\n  return state['answerSimple'] !== null && state['answerParticiple'] !== null\n}\n\nfunction makeState(verbDef) {\n\n  return  {\n    ...createTask(verbDef),\n    answerSimple: null,\n    answerParticiple: null,\n  };\n\n}\n\n\nfunction Task({ current, status, changePuzzle }) {\n\n  const [taskState, setTaskState] = useState(makeState(current));\n\n  useEffect(() => {\n    setTaskState(makeState(current))\n  }, [current])\n\n\n  const setAnswer = (variant, key) => {\n    if (taskState['answer' + key]) return;\n    setTaskState({\n      ...taskState,\n      ['answer' + key]: variant\n    });\n  };\n\n  function checkVariant(variant, key) {\n    const answerKey = 'answer' + key;\n    const stateKey = key.toLowerCase();\n\n    return taskState[answerKey] === variant\n      ? taskState.def[stateKey] === taskState[answerKey]\n        ? 'm22-correct'\n        : 'm22-fail'\n      : taskState[answerKey] !== null && taskState.def[stateKey] === variant\n      ? 'm22-correct'\n      : '';\n  }\n\n  return (\n    <div className=\"m22-task flex-fill\">\n      <div className=\"m22-base\">{taskState.base}</div>\n\n      <div className=\"m22-simple m22-answer-block m-4 p-4 px-5 d-flex flex-column\">\n        <h6 className=\"text-right font-italic\">simple</h6>\n        {taskState.simple.map((verb, idx) => (\n          <Button\n            variant=\"secondary\"\n            onClick={e => setAnswer(verb, 'Simple')}\n            className={checkVariant(verb, 'Simple') + ' mb-3'}\n            key={verb + idx}\n          >\n            {verb}\n          </Button>\n        ))}\n      </div>\n      <div className=\"m22-participle m22-answer-block mx-4 px-5  d-flex flex-column\">\n        <h6 className=\"text-right font-italic\">participle</h6>\n        {taskState.participle.map((verb, idx) => (\n          <Button\n            variant=\"secondary\"\n            onClick={e => setAnswer(verb, 'Participle')}\n            className={checkVariant(verb, 'Participle') + ' mb-3'}\n            key={verb + idx}\n          >\n            {verb}\n          </Button>\n        ))}\n      </div>\n      <div className=\"d-flex flex-fill justify-content-end mx-4\">\n        <Link\n          to=\"/\"\n          onClick={e => {\n            e.preventDefault()\n            changePuzzle()\n          }}\n          className={\n            checkComplete(taskState)\n              ? 'active'\n              : 'disabled'\n          }\n        >\n          <MdPlayCircleOutline />\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    current: state.game.current,\n    status: state.game.status\n  };\n};\n\nconst mapDispatchToProps = {\n  changePuzzle: actions.changePuzzle\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Task);\n","import React from 'react'\n\nimport Incoming from './Incoming'\nimport Task from './Task'\n\nexport default function Game(props) {\n  return <main className=\"d-flex flex-column flex-fill\">\n    <Task />\n    {/* <Incoming /> */}\n  </main>\n}\n","import React from 'react'\n\n\nimport { Button } from 'react-bootstrap';\n\nexport default function Settings(props) {\n  return <main className=\"m22-settings\">\n    {/* settings\n\n     <div>\n      <Button>test</Button>\n     </div> */}\n  </main>\n}\n","import {CHANGE_PUZZLE} from './actions'\nimport { shuffle } from '../../utils/array';\n\nconst raw = require('../../data/verbs.json')\nconst verbs = shuffle(raw.data)\n\nconst initialState = {\n\n  current: verbs[0],\n  finished: [],\n  incoming: verbs.slice(1, verbs.length),\n  status: 'bla'\n}\n\n\n\nexport default function gameReducer(state = initialState, action) {\n  switch (action.type) {\n\n    case CHANGE_PUZZLE:\n      return {\n        finished: [state.current, ...state.finished],\n        current: state.incoming.length > 0 ? state.incoming[0]: null,\n        incoming: state.incoming.slice(1, state.incoming.length),\n        status: state.incoming.length === 0 ? 'You win' : null\n      }\n    default:\n      return state\n\n  }\n}","\nimport { createStore, combineReducers } from 'redux'\nimport gameReducer from './game/reducer';\n\n\n\nconst rootReducer = combineReducers({\n  game: gameReducer\n})\n\nexport default createStore(rootReducer,   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n","import React from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Game from './components/Game';\nimport Settings from './components/Settings';\n\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport { Container } from 'react-bootstrap';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Container className=\"flex-fill d-flex flex-column p-0\">\n          <Header />\n          <Route path=\"/\" exact component={Game} />\n          <Route path=\"/settings\" exact component={Settings} />\n          <Footer />\n\n        </Container>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}